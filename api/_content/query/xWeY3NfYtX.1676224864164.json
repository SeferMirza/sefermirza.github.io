[{"_path":"/features/options","_dir":"features","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"Options","description":"Options are features that you can only enable or disable. Below is a sample\r\noption configuration;","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Options"}]},{"type":"text","value":" are features that you can only enable or disable. Below is a sample\r\noption configuration;"}]},{"type":"element","tag":"code","props":{"code":"// e.g. audit has built in Enabled or Disabled configuration options\r\naudit: c => c.Enabled()\n","language":"csharp"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// e.g. audit has built in Enabled or Disabled configuration options\r\naudit: c => c.Enabled()\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"audit"},"children":[{"type":"text","value":"Audit"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Audit option lets you enable or disable audit information added to your entity\r\ndatabase tables. When enabled, the outlined columns are added to your entity\r\ndatabase tables."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":" ","src":"./-images/audit-info.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To configure this feature you can use built in "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Enabled()"}]},{"type":"text","value":" and "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Disabled()"}]},{"type":"text","value":"\r\noptions. Default option is "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Enabled()"}]},{"type":"text","value":"."}]},{"type":"element","tag":"code","props":{"code":"audit: c => c.Enabled()\n","language":"csharp"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"audit: c => c.Enabled()\n"}]}]}]},{"type":"element","tag":"code","props":{"code":"audit: c => c.Disabled()\n","language":"csharp"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"audit: c => c.Disabled()\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can add a request limit if you have enabled this feature."}]},{"type":"element","tag":"code","props":{"code":"audit: c => c.Enabled(limitDailyRequest: true)\n","language":"csharp"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"audit: c => c.Enabled(limitDailyRequest: true)\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"decimal-point"},"children":[{"type":"text","value":"Decimal Point"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Decimal point lets you change the way "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Money"}]},{"type":"text","value":" and "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"MoneyRange"}]},{"type":"text","value":" value types\r\nserialized in service layer. It gives you two options "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Always"}]},{"type":"text","value":" and\r\n"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"AfterTwoDigits"}]},{"type":"text","value":", default configuration is "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Always()"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Use "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Always"}]},{"type":"text","value":", when you always expect decimal point separator;"}]},{"type":"element","tag":"code","props":{"code":"// While parsing, this option expects decimal point\r\n// only when there are decimal digits.\r\n// 100USD -> $100\r\n// 1.00USD -> $1.00\r\n\r\ndecimalPoint: c => c.Always()\n","language":"csharp"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// While parsing, this option expects decimal point\r\n// only when there are decimal digits.\r\n// 100USD -> $100\r\n// 1.00USD -> $1.00\r\n\r\ndecimalPoint: c => c.Always()\n"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Use "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"AfterTwoDigits"}]},{"type":"text","value":" when you want last two digits to be treated automatically\r\nas decimal digits;"}]},{"type":"element","tag":"code","props":{"code":"// While parsing, this option treats last two digits\r\n// as decimal digits even if there is no decimal point\r\n// separator and expect decimal point separator only\r\n// when there are more than two decimal digits\r\n// 100USD -> $1.00\r\n// 1.001USD -> $1.001\r\n\r\ndecimalPoint: c => c.AfterTwoDigits(),\n","language":"csharp"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// While parsing, this option treats last two digits\r\n// as decimal digits even if there is no decimal point\r\n// separator and expect decimal point separator only\r\n// when there are more than two decimal digits\r\n// 100USD -> $1.00\r\n// 1.001USD -> $1.001\r\n\r\ndecimalPoint: c => c.AfterTwoDigits(),\n"}]}]}]},{"type":"element","tag":"h2","props":{"id":"utc"},"children":[{"type":"text","value":"UTC"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can choose if "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ISystem.Now"}]},{"type":"text","value":" property will use UTC time or local time using\r\nthis option."}]},{"type":"element","tag":"code","props":{"code":"// Uses Utc time\r\nutc: c => c.UseUtcTime()\n","language":"csharp"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// Uses Utc time\r\nutc: c => c.UseUtcTime()\n"}]}]}]},{"type":"element","tag":"code","props":{"code":"// Uses local time\r\nutc: c => c.UseLocalTime()\n","language":"csharp"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// Uses local time\r\nutc: c => c.UseLocalTime()\n"}]}]}]}]},"position":101,"_type":"markdown","_id":"content:features:options.md","_source":"content","_file":"features/options.md","_extension":"md"},{"_path":"/release-notes","_dir":"","_draft":false,"_partial":false,"_locale":"en","_empty":false,"title":"Release Notes","description":"Gazel follows [major].[minor].[patch] version format. It is basically\r\nSemantic Versioning, but with a small difference;","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Gazel follows "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"[major].[minor].[patch]"}]},{"type":"text","value":" version format. It is basically\r\n"},{"type":"element","tag":"a","props":{"href":"https://semver.org/","rel":["nofollow"]},"children":[{"type":"text","value":"Semantic Versioning"}]},{"type":"text","value":", but with a small difference;"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"[major]"}]},{"type":"text","value":": Starting from v5.x.x, this part will follow major .NET releases\r\nwithout backward compatibility. So if Gazel is on v5.x.x then it is\r\ncompatible with .NET 5, if it is v6.x.x then it is compatible with .NET 6,\r\nand so on."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"[minor]"}]},{"type":"text","value":": When there is a new feature or a breaking change on top of an\r\nexisting major release, it means it is a minor release."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"[patch]"}]},{"type":"text","value":": When new release only includes a bugfix or an improvement without\r\na new feature or breaking change, it is only a patch."}]}]}]},"article":{"position":6,"sectionOrder":"desc","sectionSortBy":"title"},"_type":"markdown","_id":"content:release-notes:index.md","_source":"content","_file":"release-notes/index.md","_extension":"md"}]